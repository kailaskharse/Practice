gcc basic-tutorial-1.c -o basic-tutorial-1 `pkg-config --cflags --libs gstreamer-1.0`

gcc 1_initiailzing.c `pkg-config --cflags --libs gstreamer-1.0`



windows
gst-launch-1.0.exe -e -v rtspsrc location=rtsp://192.168.16.155/live.sdp ! rtph264depay ! h264parse !  mp4mux ! filesink location=record/video.h264

	Client command: rtsp://127.0.0.1:8554/test.

Linux
gst-launch-1.0 playbin uri=file:///home/joe/my-random-media-file.mpeg


Nvedia:
    gst-launch-1.0 -v v4l2src device=/dev/video0 ! "video/x-raw, format=(string)UYVY, width=(int)1920, height=(int)1080" ! nvvidconv ! "video/x-raw(memory:NVMM), format=(string)I420, width=(int)1920, height=(int)1080" ! omxh264enc ! rtph264pay mtu=60000 sprop-parameter-sets=1 ! udpsink clients=192.168.1.105:3221 sync=false

SDP:
    v=0
    o=- 1208520720 2590316915 IN IP4 127.0.0.1
    s= no name
    c=IN IP4 127.0.0.1
    t=0 0
    m=video 3221 RTP/AVP 96
    a=rtpmap:96 H264/90000
    a=fmtp:96 media=video; clock-rate=90000; encoding-name=H264; sprop-parameter-sets=Z0JANJWgHgCJ+VA=,aM48gA==;
    a=control:trackID=1



-----------------------
REF: https://developer.toradex.com/knowledge-base/audio-video-over-rtp-(linux) 

gst-launch -v filesrc location=/home/root/nv_medusa_h264_720_6M_cbr_2p_key60_q90_aac128_44.mp4 ! qtdemux name=demux demux.video_00 ! queue ! rtph264pay pt=96 ! udpsink host=localhost port=5000 demux.audio_00 ! queue ! rtpmp4apay pt=97 ! udpsink host=localhost port=5001

Sending P2P: 
gst-launch-0.10 filesrc location=/home/joe/my-random-media-file.mp4 ! qtdemux name=demux demux.video_00 ! queue ! rtph264pay pt=96 ! udpsink host=192.168.4.91 port=5000 demux.audio_00 ! queue ! rtpmp4apay pt=97 ! udpsink host=192.168.4.91 port=5001


USEFUL LINK:
https://telecom.altanai.com/category/media-processes/live-streaming-and-broadcasting/
